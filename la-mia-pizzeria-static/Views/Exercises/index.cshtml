
@{
    ViewData["Title"] = "index";
    string myName = "Daniele";
    string myLastName = "Ciccarelli";

    int getSum(int num)
    {
        int sum = 0;
        for (int i = 0; i <= num; i++)
        {
            sum += i;
        }
        return sum;
    }

    int charCount (string phrase, char ch)
    {
        int freq = phrase.Count(f => (f == ch));
        return(freq);
    }


    var nums = new List<int>();
    while (nums.Count < 20) {
        int num = new Random().Next(1, 90);
        if (!nums.Contains(num)) nums.Add(num);
    }

    string Date = DateTime.Now.ToString("yyy-MM-dd HH:mm:ss");
    DateTime currentDate = DateTime.Now;
}
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
@*1. Dichiarare una variabile valorizzandola con il nostro nome.
Dichiarare un'altra variabile valorizzandola con il nostro cognome.
Stampare il nostro nome e cognome all'interno di un tag h2.*@
<h3>ESERCIZIO 1:</h3>
<h5 class="">@myName + @myLastName</h5>
<h2 class="mb-3">--------------------------------------------------------------</h2>

@*2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)
Stampare dentro uno span il risultato.*@
<h3>ESERCIZIO 2:</h3>
<span>@getSum(20)</span>
<h2 class="mb-3">--------------------------------------------------------------</h2>

@*3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina*@
<h3>ESERCIZIO 3:</h3>
<span>@charCount("nel mezzo del cammin di nostra vita", 'a')</span>
<h2 class="mb-3">--------------------------------------------------------------</h2>

@*4. Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) 
    e mostrare in pagina solo i numeri compresi tra 20 e 70*@
<h3>ESERCIZIO 4:</h3>

<h3>Numeri compresi tra 20 e 70:</h3>
@foreach(int num in nums) {
    if (num>19 && num<71) {
        <div>
            <h4>@num</h4>
        </div>   
    }
}
<h2 class="mb-3">--------------------------------------------------------------</h2>

@*5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) 
con il formato anno-mese-giorno ore:minuti:secondi*@

<h3>Data ed ora attuale: @Date</h3>

@*6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina
a. la data di 7 giorni fa
b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)*@

<h3>La data di 7 giorni fà è @currentDate.AddDays(-7).ToString("yyyy-MM-dd")</h3>
<h3>Oggi e' il giorno: @currentDate.ToString("dddd")</h3>
<h3>Tra un anno sarà: @currentDate.AddYears(1).ToString("dddd")</h3>

